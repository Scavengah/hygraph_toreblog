{"version":3,"file":"rich-text-react-renderer.esm.js","sources":["../src/elements/IFrame.tsx","../src/elements/Image.tsx","../src/elements/Video.tsx","../src/elements/Class.tsx","../src/elements/Link.tsx","../src/defaultElements.tsx","../src/RenderText.tsx","../src/RichText.tsx"],"sourcesContent":["import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { IFrameProps } from '@graphcms/rich-text-types';\n\nexport function IFrame({ url }: Partial<IFrameProps>) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        width: '100%',\n        paddingTop: '56.25%',\n      }}\n    >\n      <iframe\n        style={{\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        src={escapeHtml(url)}\n        loading=\"lazy\"\n        allow=\"fullscreen\"\n        frameBorder=\"0\"\n        referrerPolicy=\"no-referrer\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { ImageProps } from '@graphcms/rich-text-types';\n\nexport function Image({\n  src,\n  width,\n  height,\n  altText,\n  title,\n}: Partial<ImageProps>) {\n  return (\n    <img\n      loading=\"lazy\"\n      src={escapeHtml(src)}\n      width={width}\n      height={height}\n      alt={altText}\n      title={title}\n    />\n  );\n}\n","import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { VideoProps } from '@graphcms/rich-text-types';\n\nexport function Video({ src, width, height, title }: Partial<VideoProps>) {\n  return (\n    <video\n      src={escapeHtml(src)}\n      controls\n      width={width || '100%'}\n      height={height || '100%'}\n      title={title}\n    >\n      <p>\n        Your browser doesn't support HTML5 video. Here is a{' '}\n        <a href={src}>link to the video</a> instead.\n      </p>\n    </video>\n  );\n}\n","import React from 'react';\nimport { ClassRendererProps } from '@graphcms/rich-text-types';\n\nexport function Class({ className, children }: ClassRendererProps) {\n  return <div className={className}>{children}</div>;\n}\n","import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { LinkElement, LinkRendererProps } from '@graphcms/rich-text-types';\n\nexport function Link({ children, ...rest }: LinkRendererProps) {\n  const { href, rel, id, title, openInNewTab, className } = rest;\n\n  const props: Pick<LinkElement, 'rel' | 'id' | 'title' | 'className'> & {\n    target?: string;\n  } = {};\n\n  if (rel) props.rel = rel;\n  if (id) props.id = id;\n  if (title) props.title = title;\n  if (className) props.className = className;\n  if (openInNewTab) props.target = '_blank';\n\n  return (\n    <a href={escapeHtml(href)} {...props}>\n      {children}\n    </a>\n  );\n}\n","import React from 'react';\nimport { NodeRendererType } from '@graphcms/rich-text-types';\n\nimport { IFrame, Image, Video, Class, Link } from './elements';\n\nexport const defaultElements: Required<NodeRendererType> = {\n  a: Link,\n  class: Class,\n  video: Video,\n  img: Image,\n  iframe: IFrame,\n  blockquote: ({ children }) => <blockquote>{children}</blockquote>,\n  ul: ({ children }) => <ul>{children}</ul>,\n  ol: ({ children }) => <ol>{children}</ol>,\n  li: ({ children }) => <li>{children}</li>,\n  p: ({ children }) => <p>{children}</p>,\n  h1: ({ children }) => <h1>{children}</h1>,\n  h2: ({ children }) => <h2>{children}</h2>,\n  h3: ({ children }) => <h3>{children}</h3>,\n  h4: ({ children }) => <h4>{children}</h4>,\n  h5: ({ children }) => <h5>{children}</h5>,\n  h6: ({ children }) => <h6>{children}</h6>,\n  table: ({ children }) => <table>{children}</table>,\n  table_head: ({ children }) => <thead>{children}</thead>,\n  table_body: ({ children }) => <tbody>{children}</tbody>,\n  table_row: ({ children }) => <tr>{children}</tr>,\n  table_cell: ({ children }) => <td>{children}</td>,\n  bold: ({ children }) => <b>{children}</b>,\n  italic: ({ children }) => <i>{children}</i>,\n  underline: ({ children }) => <u>{children}</u>,\n  code: ({ children }) => <code>{children}</code>,\n  list_item_child: ({ children }) => <>{children}</>,\n};\n\nexport const elementKeys: { [key: string]: string } = {\n  'heading-one': 'h1',\n  'heading-two': 'h2',\n  'heading-three': 'h3',\n  'heading-four': 'h4',\n  'heading-five': 'h5',\n  'heading-six': 'h6',\n  class: 'class',\n  link: 'a',\n  image: 'img',\n  iframe: 'iframe',\n  video: 'video',\n  'bulleted-list': 'ul',\n  'numbered-list': 'ol',\n  'list-item': 'li',\n  'list-item-child': 'list_item_child',\n  table: 'table',\n  table_head: 'table_head',\n  table_body: 'table_body',\n  table_row: 'table_row',\n  table_cell: 'table_cell',\n  'block-quote': 'blockquote',\n  paragraph: 'p',\n  bold: 'bold',\n  italic: 'italic',\n  underline: 'underline',\n  code: 'code',\n};\n","import React, { ReactNode } from 'react';\nimport { NodeRendererType, Text } from '@graphcms/rich-text-types';\n\nimport { elementKeys } from './defaultElements';\n\nexport function RenderText({\n  textNode,\n  renderers,\n}: {\n  textNode: Text;\n  renderers?: NodeRendererType;\n}) {\n  const { text, bold, italic, underline, code } = textNode;\n\n  const Bold = renderers?.[elementKeys['bold'] as keyof NodeRendererType];\n  const Italic = renderers?.[elementKeys['italic'] as keyof NodeRendererType];\n  const Underline =\n    renderers?.[elementKeys['underline'] as keyof NodeRendererType];\n  const Code = renderers?.[elementKeys['code'] as keyof NodeRendererType];\n\n  let element: ReactNode = text;\n\n  if (bold && Bold) {\n    element = <Bold>{element}</Bold>;\n  }\n\n  if (italic && Italic) {\n    element = <Italic>{element}</Italic>;\n  }\n\n  if (underline && Underline) {\n    element = <Underline>{element}</Underline>;\n  }\n\n  if (code && Code) {\n    element = <Code>{element}</Code>;\n  }\n\n  return <>{element}</>;\n}\n","import React, { Fragment } from 'react';\nimport {\n  RichTextProps,\n  NodeRendererType,\n  ElementNode,\n  Node,\n  isElement,\n  isText,\n} from '@graphcms/rich-text-types';\n\nimport { defaultElements, elementKeys } from './defaultElements';\nimport { RenderText } from './RenderText';\n\nfunction RenderNode({\n  node,\n  renderers,\n}: {\n  node: Node;\n  renderers?: NodeRendererType;\n}) {\n  if (isText(node)) {\n    return <RenderText textNode={node} renderers={renderers} />;\n  }\n\n  if (isElement(node)) {\n    return <RenderElement element={node} renderers={renderers} />;\n  }\n\n  const { type } = node as ElementNode;\n\n  if (__DEV__) {\n    console.warn(\n      `[@graphcms/rich-text-react-renderer]: Unknown node type encountered: ${type}`\n    );\n  }\n\n  return <Fragment />;\n}\n\nfunction RenderElement({\n  element,\n  renderers,\n}: {\n  element: ElementNode;\n  renderers?: NodeRendererType;\n}) {\n  const { children, type, ...rest } = element;\n\n  const NodeRenderer = renderers?.[elementKeys[type] as keyof NodeRendererType];\n\n  if (NodeRenderer) {\n    return (\n      <NodeRenderer {...rest}>\n        <RichText content={children as ElementNode[]} renderers={renderers} />\n      </NodeRenderer>\n    );\n  }\n\n  return <Fragment />;\n}\n\nexport function RichText({ content, renderers: resolvers }: RichTextProps) {\n  const renderers: NodeRendererType = {\n    ...defaultElements,\n    ...resolvers,\n  };\n\n  if (__DEV__ && !content) {\n    console.error(`[@graphcms/rich-text-react-renderer]: content is required.`);\n\n    return <Fragment />;\n  }\n\n  if (__DEV__ && !Array.isArray(content) && !content.children) {\n    console.error(\n      `[@graphcms/rich-text-react-renderer]: children is required.`\n    );\n\n    return <Fragment />;\n  }\n\n  const elements = Array.isArray(content) ? content : content.children;\n\n  return (\n    <>\n      {elements.map((node, index) => {\n        return <RenderNode node={node} renderers={renderers} key={index} />;\n      })}\n    </>\n  );\n}\n"],"names":["IFrame","url","React","style","position","overflow","width","paddingTop","top","bottom","right","left","height","src","escapeHtml","loading","allow","frameBorder","referrerPolicy","Image","altText","title","alt","Video","controls","href","Class","className","children","Link","rest","rel","id","openInNewTab","props","target","defaultElements","a","video","img","iframe","blockquote","ul","ol","li","p","h1","h2","h3","h4","h5","h6","table","table_head","table_body","table_row","table_cell","bold","italic","underline","code","list_item_child","elementKeys","link","image","paragraph","RenderText","textNode","renderers","text","Bold","Italic","Underline","Code","element","RenderNode","node","isText","isElement","RenderElement","type","console","warn","Fragment","NodeRenderer","RichText","content","resolvers","error","Array","isArray","elements","map","index","key"],"mappings":"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"}